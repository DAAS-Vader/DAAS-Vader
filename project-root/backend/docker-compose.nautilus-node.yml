version: '3.8'

# Nautilus 노드용 Docker Compose 템플릿
# 이미지 빌드 및 배포 시 이 템플릿을 사용하여 자동으로 모니터링 활성화

services:
  # 애플리케이션 컨테이너 (Nautilus 빌드 이미지)
  nautilus-app:
    image: ${NAUTILUS_IMAGE}  # Nautilus 빌드로 생성된 이미지
    container_name: nautilus-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      - NODE_ENV=production
      - NODE_ID=${NODE_ID}
      - NODE_NAME=${NODE_NAME}
    networks:
      - nautilus-network
    labels:
      - "nautilus.managed=true"
      - "nautilus.node.id=${NODE_ID}"
      - "nautilus.build.id=${BUILD_ID}"

  # Node Exporter (시스템 모니터링)
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    pid: host
    network_mode: host
    volumes:
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--web.listen-address=:9100'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    labels:
      - "nautilus.monitoring=true"
      - "nautilus.node.id=${NODE_ID}"

  # cAdvisor (Docker 컨테이너 모니터링)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    labels:
      - "nautilus.monitoring=true"
      - "nautilus.node.id=${NODE_ID}"
    networks:
      - nautilus-network

  # 모니터링 등록 서비스 (초기화 후 종료)
  monitoring-registrar:
    image: curlimages/curl:latest
    container_name: monitoring-registrar
    depends_on:
      - node-exporter
      - cadvisor
    environment:
      - BACKEND_API=${BACKEND_API:-http://localhost:3001}
      - NODE_ID=${NODE_ID}
      - NODE_IP=${NODE_IP}
      - NODE_NAME=${NODE_NAME:-nautilus-node}
      - AUTH_TOKEN=${AUTH_TOKEN}
    command: |
      sh -c "
        echo 'Waiting for services to start...'
        sleep 10
        echo 'Registering node to monitoring system...'
        curl -X POST $$BACKEND_API/api/node-registry/register \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer '$$AUTH_TOKEN \
          -d '{
            \"nodeId\": \"'$$NODE_ID'\",
            \"nodeIp\": \"'$$NODE_IP'\",
            \"nodePort\": 9100,
            \"labels\": {
              \"node_name\": \"'$$NODE_NAME'\",
              \"type\": \"nautilus-runtime\",
              \"managed_by\": \"nautilus\"
            }
          }' || echo 'Registration failed, please register manually'
        echo 'Registration complete'
      "
    networks:
      - nautilus-network

networks:
  nautilus-network:
    driver: bridge

volumes:
  app_data: